---
import { supabase } from '../../app_v2/src/lib/supabase';

// Fetch table structure
const { data: tables, error: tablesError } = await supabase
  .from('information_schema.columns')
  .select('table_name, column_name, data_type, is_nullable, column_default')
  .eq('table_schema', 'public')
  .neq('table_name', 'schema_migrations')
  .order('table_name');

// Fetch foreign key relationships
const { data: relations, error: relationsError } = await supabase.rpc(
  'get_foreign_keys',
  {}
);
---

<html lang='en'>
  <head>
    <meta charset='utf-8' />
    <meta name='viewport' content='width=device-width, initial-scale=1' />
    <title>Database Schema</title>
    <style>
      .schema-table {
        margin-bottom: 2rem;
        border: 1px solid #e2e8f0;
        border-radius: 0.5rem;
      }
      .table-name {
        background: #f8fafc;
        padding: 1rem;
        border-bottom: 1px solid #e2e8f0;
      }
      table {
        width: 100%;
        border-collapse: collapse;
      }
      th,
      td {
        padding: 0.75rem;
        text-align: left;
        border-bottom: 1px solid #e2e8f0;
      }
      th {
        background: #f1f5f9;
      }
    </style>
  </head>
  <body class='p-8'>
    <h1 class='text-3xl font-bold mb-6'>Database Schema</h1>

    {
      tablesError && (
        <div class='text-red-600'>
          Error loading schema: {tablesError.message}
        </div>
      )
    }

    {
      tables && (
        <div class='space-y-8'>
          {[...new Set(tables.map((t) => t.table_name))].map((tableName) => {
            const columns = tables.filter((t) => t.table_name === tableName);
            return (
              <div class='schema-table'>
                <h2 class='table-name text-xl font-semibold'>{tableName}</h2>
                <table>
                  <thead>
                    <tr>
                      <th>Column</th>
                      <th>Type</th>
                      <th>Nullable</th>
                      <th>Default</th>
                    </tr>
                  </thead>
                  <tbody>
                    {columns.map((column) => (
                      <tr>
                        <td>{column.column_name}</td>
                        <td>{column.data_type}</td>
                        <td>{column.is_nullable}</td>
                        <td>{column.column_default || '-'}</td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            );
          })}
        </div>
      )
    }
  </body>
</html>

