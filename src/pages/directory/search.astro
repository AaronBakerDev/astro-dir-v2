---
import Layout from '../../layouts/Layout.astro';
import { supabase } from '../../lib/supabase';
import SearchForm from '../../components/directory/SearchForm.astro';
import SearchResults from '../../components/directory/SearchResults.astro';

// Get search params
const url = new URL(Astro.request.url);
const searchQuery = url.searchParams.get('search') || '';
const selectedServiceId = url.searchParams.get('service') || '';
const currentPage = parseInt(url.searchParams.get('page') || '1');
const itemsPerPage = 12;

// Service categories mapping
const serviceCategories = [
  {
    id: 'masonry-contractors',
    name: 'Masonry Contractors',
    description: 'Expert masonry services for your home or business',
  },
  {
    id: 'chimney-repair',
    name: 'Chimney Repair',
    description: 'Professional chimney repair and maintenance services',
  },
  {
    id: 'roofing-services',
    name: 'Roofing Services',
    description: 'Specialized roofing and chimney flashing repairs',
  },
  {
    id: 'brick-repair',
    name: 'Brick Repair',
    description: 'Expert brick repair and restoration services',
  },
];

// Get selected category
const selectedCategory = serviceCategories.find(
  (cat) => cat.id === selectedServiceId
);

interface SearchResult {
  data: any[] | null;
  error: {
    message: string;
  } | null;
  pagination?: {
    currentPage: number;
    totalPages: number;
    totalItems: number;
  };
}

let searchResults: SearchResult = { data: null, error: null };

try {
  // Build the query
  let query = supabase.from('places').select('*', { count: 'exact' });

  // Apply search if provided
  if (searchQuery) {
    query = query.ilike('title', `%${searchQuery}%`);
  }

  // Apply service filter if selected
  if (selectedCategory) {
    query = query.eq('category', selectedCategory.name);
  }

  // Calculate pagination
  const from = (currentPage - 1) * itemsPerPage;
  const to = from + itemsPerPage - 1;

  // Execute the query with pagination
  const { data, error, count } = await query
    .order('rating', { ascending: false })
    .range(from, to);

  searchResults = {
    data: data || [],
    error: error ? { message: error.message } : null,
    pagination: {
      currentPage,
      totalPages: count ? Math.ceil(count / itemsPerPage) : 0,
      totalItems: count || 0,
    },
  };
} catch (error) {
  searchResults = {
    data: null,
    error: { message: 'An unexpected error occurred' },
  };
}

// Helper function to generate pagination URL
const getPaginationUrl = (page: number) => {
  const params = new URLSearchParams(url.searchParams);
  params.set('page', page.toString());
  return `?${params.toString()}`;
};
---

<Layout title='Search Results | Find Local Chimney Professionals'>
  <div class='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12'>
    <nav class='mb-8'>
      <a
        href='/directory'
        class='text-red-600 hover:text-red-700 flex items-center gap-1'>
        <span>‚Üê</span> Back to Directory
      </a>
    </nav>

    <SearchForm
      searchQuery={searchQuery}
      selectedServiceId={selectedServiceId}
      serviceCategories={serviceCategories}
    />

    {
      searchResults.error && (
        <div class='p-4 bg-red-50 text-red-600 rounded-lg'>
          Error loading professionals: {searchResults.error.message}
        </div>
      )
    }

    <SearchResults
      places={searchResults.data || []}
      selectedCategory={selectedCategory}
      totalCount={searchResults.pagination?.totalItems}
    />

    {/* Pagination Controls */}
    {
      searchResults.pagination && searchResults.pagination.totalPages > 1 && (
        <div class='flex justify-center gap-2 mt-8'>
          {currentPage > 1 && (
            <a
              href={getPaginationUrl(currentPage - 1)}
              class='px-4 py-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 text-gray-700'>
              Previous
            </a>
          )}

          <span class='px-4 py-2 text-gray-600'>
            Page {currentPage} of {searchResults.pagination.totalPages}
          </span>

          {currentPage < searchResults.pagination.totalPages && (
            <a
              href={getPaginationUrl(currentPage + 1)}
              class='px-4 py-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 text-gray-700'>
              Next
            </a>
          )}
        </div>
      )
    }
  </div>
</Layout>
